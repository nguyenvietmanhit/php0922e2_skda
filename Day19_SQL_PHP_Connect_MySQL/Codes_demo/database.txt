database.txt
1/ Cơ sở dữ liệu MySQL
+ Cơ sở dữ liệu là gì ? dùng để lưu trữ thông tin, có tính ổn định
và lưu trữ lâu dài
+ Web lại cần CSDL ? -> web động
+ MySQL là gì? là tên 1 hệ quản trị CSDL
CSDL: MySQL, SQL Server, NoSQL, Oracle, SQLite, PostgreSQL,
MongoDB ...
+ MySQL free, hay kết hợp với PHP
2/ Cài đặt và truy cập MySQL
+ XAMPP cài sẵn MySQL -> Start module MySQL
+ Truy cập: command line, UI: PHPMyadmin, MySQLWorkbench, Navicat
.... Hiện tại sẽ sử dụng PHPMyadmin:
http://localhost/phpmyadmin
3/ Thuật ngữ: làm web về bán hàng
+ Database: tên csdl: php0922e_demo

+ Table: là các bảng, lưu thông tin theo từng đối tượng:
users, products, categories ... (tên bảng nên ở dạng số nhiều)

+ Field/column: là các trường mô tả cho các thông tin sẽ lưu
về đối tượng của bảng
users: fullname, age, phone, address, username, password ...
products: name, price, amount, avatar ...

+ Record/row: dữ liệu cụ thể của 1 đối tượng trong bảng:
users:
fullname = 'manhv'
age = 32
phone = 1234

+ Primary key: khóa chính trong 1 bảng, là 1 trường phân biệt các
bản ghi với nhau:
users:
bản ghi1: fullname = 'abc', age = 32
bản ghi2: fullname = 'abc', age = 32
+ Foreign key: khóa ngoại, là 1 trường bình thường trong 1 bảng,
đồng thời là khóa chính của 1 bảng có liên kết:
categories: id, name, description
products: id, category_id, name, price
-> quy tắc: <tên-bảng-số-ít>_id
Relation: 1-1, 1-n, n-1, n-n

4 - Ngôn ngữ truy vấn SQL
+ Structure Query Language
+ Là ngôn ngữ dùng để truy vấn CSDL
+ Tương ứng với từng CSDL sẽ có 1 ngôn ngữ SQL riêng
+ Sử dụng SQL để tương tác với CSDL MySQL thông qua PHPMyadmin
5 - Một số truy vấn SQL cơ bản:
+ PHPMyadmin có 2 cách để thực hiện truy vấn SQL: Command line, UI
-> UI để viết SQL

# 1 - Tạo CSDL:
CREATE DATABASE IF NOT EXISTS php0922e_demo
CHARACTER SET utf8
COLLATE utf8_general_ci;
# 2 - Xóa CSDL:
# DROP DATABASE abc;
# 3 - Sử dụng CSDL: bắt buộc phải có truy vấn này trước khi có thể thao tác đc với bảng bên trong CSDL
USE php0922e_demo;
# 4 - Kiểu dữ liệu trong MySQL:
# - Kiểu số: hay dùng TINYINT và INT
# - Kiểu chuỗi: hay dùng VARCHAR và TEXT
# - Kiểu thời gian: hay dùng DATETIME và TIMESTAMP, đều
# lưu ngày tháng và thời gian: DATETIME lưu ngày giờ thủ
# công, TIMESTAMP lưu tự động(lưu đc múi giờ của server)
# Format bắt buộc trc khi lưu: Y-m-d H:i:s
#vd:  10/03/1993 15:14:13 -> 1993-03-10 15:14:13
# 5 - Tạo bảng:
# categories: id, name, description, created_at
CREATE TABLE IF NOT EXISTS categories(
id INT(11) AUTO_INCREMENT,
name VARCHAR(100) NOT NULL, # DEFAULT NULL
description TEXT DEFAULT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id)
);
# products: id, category_id, name, price, created_at
CREATE TABLE IF NOT EXISTS products(
id INT(11) AUTO_INCREMENT,
category_id INT(11) NOT NULL,
name VARCHAR(150) DEFAULT NULL,
price INT(11) DEFAULT 0,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (id),
FOREIGN KEY (category_id) REFERENCES categories(id)
);

# 6 - Xóa bảng:
# DROP TABLE abc;
# 7 - Bốn truy vấn cơ bản:
# a/ INSERT: thêm dữ liệu vào bảng
# categories: id, name, description, created_at
# - Chỉ INSERT vào các trường mà dữ liệu của nó ko phải là
# sinh ra tự động, chỉ thêm name và description
INSERT INTO categories(name, description)
VALUES('Thể thao', 'Mô tả thể thao');
# Insert nhiều:
INSERT INTO categories(name, description)
VALUES
('Thể thao 1', 'Mô tả thể thao 1'),
('Thể thao 2', 'Mô tả thể thao 2'),
('Thể thao 3', 'Mô tả thể thao 3'),
('Thể thao 4', 'Mô tả thể thao 4'),
('Thể thao 5', 'Mô tả thể thao 5');
# b/ SELECT: lấy dữ liệu
# - Lấy tất cả trường của mọi danh mục đang có:
SELECT * FROM categories;
# - Lấy id và name của tất cả danh mục:
SELECT id, name FROM categories;
# - Lấy danh mục có id > 3:
SELECT * FROM categories WHERE id > 3;
# - Lấy 4 danh mục đầu tiên, ko dùng WHERE
SELECT * FROM categories LIMIT 4;
# - Lấy 3 bản ghi tính từ bản ghi thứ 2 trở đi:
SELECT * FROM categories LIMIT 3 OFFSET 2;
SELECT * FROM categories LIMIT 2,3; # ưu tiên
# - Tìm danh mục có tên chứa chuỗi 'thao': ký tự % đại diện
# cho các ký tự bất kỳ:
SELECT * FROM categories WHERE name LIKE '%thao%';
# - Lấy các danh mục theo thứ tự mới nhất -> cũ nhất
# DESC = descend
# ASC = ascend
SELECT * FROM categories ORDER BY created_at DESC;
# - Lấy các danh mục có id = 1 hoặc 2 hoặc 3:
SELECT * FROM categories WHERE id = 1 OR id = 2 OR id = 3;
# Dùng IN:
SELECT * FROM categories WHERE id IN (1, 2, 3);
# - Lấy các danh mục có id nằm trong khoảng 1 và 4:
SELECT * FROM categories WHERE id >= 1 AND id <= 4;
# BETWEEN:
SELECT * FROM categories WHERE id BETWEEN 1 AND 4;
# - Một số hàm dùng với SELECT:
# Hàm COUNT: đếm số bản ghi
SELECT COUNT(id) AS count_id FROM categories;
# MAX MIN AVG SUM ..
# c / UPDATE: sửa bản ghi
# Sửa name = abc, description = def cho danh mục có id = 1:
# - Luôn phải chỉ định điều kiện khi UPDATE, nếu ko UPDATE toàn
# bộ bảng
UPDATE categories SET name = 'abc', description = 'def'
WHERE id = 1;
# d / DELETE: xóa dữ liệu:
# Xóa danh mục có id > 5:
# Chú ý WHERE khi delete, nếu ko delete toàn bộ data của bảng
DELETE FROM categories WHERE id > 5;

# 8 - IMPORT và EXPORT CSDL:
# - Export CSDL php0922e_demo sử dụng PHPMyadmin: xuất ra file .sql
# Vào CSDL muốn export, Chọn menu Export -> Go , chọn chỗ lưu file
# - IMPORT file .sql thành 1 CSDL dữ liệu mới:
# Tạo CSDL php0922e_import thủ công trước, đi vào CSDL và thực hiện IMPORT

# 9 - Demo truy vấn JOIN:
# Tạo CSDL php0922e_join, IMPORT file demo_join_db.sql trong ngày 19




